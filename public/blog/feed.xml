<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.1">Jekyll</generator><link href="https://operationcode.org/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://operationcode.org/blog/" rel="alternate" type="text/html" /><updated>2017-03-04T18:40:46-05:00</updated><id>https://operationcode.org/blog/</id><title type="html">Operation Code Blog</title><subtitle>Operation Code is on a mission to trailblaze a new career path opportunity for military veterans in software development and coding.
</subtitle><entry><title type="html">Meet the random job expert who transitioned into a manager role in Silicon Valley</title><link href="https://operationcode.org/blog/2017/03/01/meet-the-random-job-expert-who-transitioned-into-a-manager-role-in-silicon-valley.html" rel="alternate" type="text/html" title="Meet the random job expert who transitioned into a manager role in Silicon Valley" /><published>2017-03-01T00:00:00-05:00</published><updated>2017-03-01T00:00:00-05:00</updated><id>https://operationcode.org/blog/2017/03/01/meet-the-random-job-expert-who-transitioned-into-a-manager-role-in-silicon-valley</id><content type="html" xml:base="https://operationcode.org/blog/2017/03/01/meet-the-random-job-expert-who-transitioned-into-a-manager-role-in-silicon-valley.html">&lt;p&gt;A search engine introduced Andrea to Operation Code. The former Army personnel manager had long contemplated a career change.&lt;/p&gt;

&lt;p&gt;Meet Andrea, a self-described random job expert. After her service as a U.S. Army Human Resource Specialist she held many jobs and admits, “I never really found that one thing that really drove me.” One day a serendipitous online search resulted in more than she expected.&lt;/p&gt;

&lt;p&gt;“I googled veterans + coding” says Andrea. It listed two results, one of them was Operation Code. As she scrolled the Operation Code webpage she learned that the non-profit organization’s mission is to aid military vets and their families learn code and web technology. She decided to reach out.&lt;/p&gt;

&lt;p&gt;Initially, because she had no previous program experience, she lacked confidence. 
Andrea acknowledged to herself and to others that a new skill would be difficult to learn. Given that her GI Bill benefits had come and gone (without her tapping into them) she specifically sought career advancement resources which wouldn’t cost a lot of money.&lt;/p&gt;

&lt;p&gt;Then Operation Code offered to set her up with a mentor, which they did. According to Conrad Hollomon, Operation Code’s Chief of Staff, mentorship is “absolutely critical” in helping someone reach their greatest potential in the tech industry.&lt;/p&gt;

&lt;p&gt;Andrea was now engaging in online communities focused on everything from open source to coding. With a combination of her do-it-yourself learning and mentor support her confidence increased. Furthermore, she believed her military background and entrepreneurial spirit made her special. But was she ready to apply for a job in tech?&lt;/p&gt;

&lt;p&gt;Then one day Andrea opened her inbox. She received a job announcement which had been forwarded to her by David Molina, Operation Code’s Founder &amp;amp; CEO. The employer was Github. Yes, Github; the multi-million dollar software company operating out of Silicon Valley. She was initially apprehensive about applying, mainly for family reasons. But after careful consideration and conversations with her supportive partner, she applied. After a four month process she received the job offer last November. “January 10th was my first day on the job” shares Andrea who credits Operation Code and the resources they shared with making the difference.&lt;/p&gt;</content><author><name>Edward Gutierrez</name></author><category term="Article" /><summary type="html">A search engine introduced Andrea to Operation Code. The former Army personnel manager had long contemplated a career change.</summary></entry><entry><title type="html">What are employers looking for in a developer?</title><link href="https://operationcode.org/blog/2016/10/06/what-are-employers-looking-for-in-a-developer.html" rel="alternate" type="text/html" title="What are employers looking for in a developer?" /><published>2016-10-06T00:00:00-04:00</published><updated>2016-10-06T00:00:00-04:00</updated><id>https://operationcode.org/blog/2016/10/06/what-are-employers-looking-for-in-a-developer</id><content type="html" xml:base="https://operationcode.org/blog/2016/10/06/what-are-employers-looking-for-in-a-developer.html">&lt;p&gt;Over the last 2 months I’ve been on numerous interviews. 12 to be exact. And the companies range in size from small and local, to large and national. I won’t list out which companies are using which technologies because it’s not my place to expose that information, but in this post you’ll I’ll highlight the sizes of the companies in relation to the technologies they use, and I’ll include other details like OS preference and infrastructures.&lt;/p&gt;

&lt;p&gt;First, let’s establish a few things. I’m a senior full-stack developer, but I prefer back-end work. That didn’t stop companies from reaching out, even if I didn’t apply with them. Second, I let &lt;em&gt;one&lt;/em&gt; recruiting agency work with me. I’ll add my experience with that as well. Third, I’m in Alberta, Canada, where there’s significantly less opportunity for developers than places like Toronto, Vancouver, L.A., Houston, N.Y., or any other major area. And lastly, I didn’t go on interviews for positions that wanted me to work remotely. It was in-office, or nothing. Working from home is nice at first, but ultimately it gets very lonely.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;about-me-in-relation-to-the-positions&quot;&gt;About me in relation to the positions&lt;/h2&gt;
&lt;p&gt;Every position I applied for was back-end development in a hands-on development role. No management roles, and I didn’t exclusively apply for front-end roles, however if they asked me about those positions I made myself available. However almost all companies are looking for experience in areas that will have nothing to do with your actual role; more often than not it’s because they want to see if you can understand another developers role and if you’ll play nice with them.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;the-companies&quot;&gt;The Companies&lt;/h2&gt;
&lt;p&gt;To start, here’s some background on which companies interviewed me. I’ll leave out the smaller company names as a courtesy to them. The two biggest companies were Telus (a Canadian telecom company, one of the 3 biggest) and The City of Edmonton, which isn’t technically a company, but for the sake of this article we’ll classify them as one. There were four medium sized companies, and 6 local companies.&lt;/p&gt;

&lt;p&gt;Both Telus and The City of Edmonton wanted full-stack development capabilities. And interestingly enough, the larger companies that wanted full-stack development also wanted the developer to know how to analyze data &lt;em&gt;and&lt;/em&gt; present the information in an easy-to-understand manner. They wanted someone to pull a lot of information, display it using a library like D3, Highcharts or the less commonly asked for Google Charts, and make the information so simple to understand that anybody could read it and make sense of it (think Google Analytics, but significantly more simple, like Mixpanel). They were much more data driven than everyone else.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;lets-talk-tech&quot;&gt;Let’s talk tech&lt;/h2&gt;
&lt;p&gt;Which technologies were companies looking for the most? Honestly, most of these companies weren’t moving along a trend line. They were just doing what suited them best. That means languages like NodeJS aren’t actually in super high demand among many companies, but they are in demand in the larger businesses like Netflix. None of the smaller, more local, companies wanted NodeJS (that’s not to say that some don’t want it). But this isn’t about NodeJS, it’s about all the technologies.&lt;/p&gt;

&lt;p&gt;At the larger companies, here’s what they generally asked for (in no particular order of importance or demand): NodeJS, MongoDB, MySQL, &lt;a href=&quot;https://www.splunk.com/&quot;&gt;Splunk&lt;/a&gt;, &lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;React&lt;/a&gt;, Angular, Express, Apache, NGINX, ASP.NET, Python, PHP, Java and JavaScript. Almost everyone wanted version control via Git &lt;a href=&quot;https://github.com/&quot;&gt;(GitHub)&lt;/a&gt;, and the ability to work with RESTful APIs, too. If you’re familiar with “stacks”, there are 2 very common ones in there: MEAN and LAMP. Two languages that weren’t anywhere to be found throughout this process, though, was Ruby on Rails and Go. It’s like they didn’t even exist.&lt;/p&gt;

&lt;p&gt;The MEAN stack is MongoDB, Express, Angular and NodeJS. The LAMP stack is Linux, Apache, MySQL and PHP (or Python).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I was surprised to find out how many job “requirements” are not actually required at all.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Companies were looking for a huge array of skills, many of them they said all these skills were “requirements” but once I got to the interview these “requirements” weren’t actually part of the job at all. One requirement that was hardly ever said that turned out to be incredibly important was JavaScript (React, Angular, jQuery, jQuery UI). When we talk about JS libraries, more people asked me about jQuery UI than they did about jQuery — it was assumed that jQuery is just something everybody knew already. Like it was HTML. In fact, nobody even asked about HTML5 (which is largely JavaScript based). And CSS — those 3 letters never came out of any mouths.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: &lt;em&gt;The higher paying jobs all wanted Object Orientated Programming (OOP).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Some positions I was applying for were strictly back-end, yet a clear understanding of how front-end languages and development work was vital. Not because they want back-end developers working on front-end code, but because they want you to have a better understanding of a team dynamic when the team members are working on different things. If a front-end developer says they need access to new information to make a better UI, will you, as a back-end developer, understand their request? Will you understand why a designer wants to make a change to the UI, and why the front-end developer is asking you for a few data changes? It’s not necessarily about team management, but about team patience and understanding, while trying to hit your timelines. A team of developers that is understanding is more efficient. Notice I didn’t say they get along or like each other, I said they are understanding.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;git&quot;&gt;Git&lt;/h2&gt;
&lt;p&gt;Regardless of the position, nearly everybody asked for version control through Git (GitHub). Nobody required a Git wizard, but knowing how to merge, pull and branch were the key ingredients. Even smaller local companies that didn’t need to use Git yet wanted you to have Git.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: &lt;em&gt;If you don’t know Git, you should learn.&lt;/em&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;apis&quot;&gt;APIs&lt;/h2&gt;
&lt;p&gt;Companies didn’t care too much about which APIs you could work with, but they did care about being able to work with them. As more and more internet technologies becomes open, APIs are becoming more important and being able to work with them is growing more important every year. Nobody really specified &lt;em&gt;which&lt;/em&gt; APIs they were looking for, but almost everybody asked “Can you work with RESTful APIs?”. I’ll cover some of the interview questions later in this article.&lt;/p&gt;

&lt;p&gt;Only one company asked if I was able to work with Stripe’s API for payment processing. Nobody asked about PayPal.&lt;/p&gt;

&lt;p&gt;It should be known that not all APIs are “simple”. Stripe’s API is super easy to get started with. But some APIs are only accessible through HTTP (curl). It’ll help you to know how to make those kinds of requests.&lt;/p&gt;

&lt;h2 id=&quot;open-source-contributions&quot;&gt;Open source contributions&lt;/h2&gt;
&lt;p&gt;The interviews that had 2 or more people asking questions typically wanted to know about any open source contributions. Speaking from a business perspective, it’s actually not important if you contribute or not. But what they are looking for is your ability to work with other people on a single project, how involved you tend to get, and if you can jump into a project and immediately start contributing. If they hire you, they aren’t going to stop production just to train you. Development isn’t just about coding anymore, it’s also about being able to move fast with other people.&lt;/p&gt;

&lt;p&gt;If you’re not contributing to an open source project, maybe it’s time to start looking. Size isn’t important, but the mere fact of contributing is helpful in interviews.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: &lt;em&gt;You can always start your own open source project. Why not create your own CMS? WordPress works this way.&lt;/em&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;local-development&quot;&gt;Local Development&lt;/h2&gt;
&lt;p&gt;I was asked a lot about how I do local development. While it’s not often said, local development is important. Only the strictly-web-development companies asked about local development. This ties into version control a little bit, too.&lt;/p&gt;

&lt;p&gt;Big players like Hootsuite (who I spoke to) will want you to do local development, commit to Git, and repeat until pushing your work to a staging and/or production site. It was actually Hootsuite who very directly asked if I had experience with &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt;, but there were a couple other people who had nonchalantly talked about Vagrant as if everyone else is already using it as the standard local environment tool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: &lt;em&gt;&lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt; allows you to create local servers inside your laptop/dsktop. It’s a powerful tool that will save you a lot of time when moving local code to live servers. You can SSH (shell) and SFTP into it, too.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Local Version Control Tip&lt;/strong&gt;: &lt;em&gt;When writing local code you can use Dropbox as your local version control. Just point your Vagrant (or WAMP, or whichever server environment tool you use) to a Dropbox folder. Dropbox comes with version control in case you make mistakes and auto-syncs to their cloud. You can SSH into your Vagrant machine and commit using Git, too.&lt;/em&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;infrastructure-and-os&quot;&gt;Infrastructure and OS&lt;/h2&gt;
&lt;p&gt;Do you code using a Windows laptop, or Mac? It doesn’t matter. As long as you can commit the code and work with others on it.&lt;/p&gt;

&lt;p&gt;But when it comes to production (live websites/apps) the standard is Linux. And Linux has several distributions to choose from. This is somewhat of a grey area, but generally speaking most companies asked about Ubuntu and Windows. The Windows OS for production servers surprised me, and how common it was asked for surprised me too, although there was very little mention of Azure. It was typically the older companies that used Windows, and had licenses from Microsoft for certain software requirements (the same companies that had a list of ~40 items of “requirements” that were nearly impossible to obtain unless you already worked for that company, or the licensing company, more on this later).&lt;/p&gt;

&lt;p&gt;Other than Ubuntu and Windows servers, when I asked where the servers are hosted, 6 said &lt;a href=&quot;https://aws.amazon.com/&quot;&gt;Amazon Web Services&lt;/a&gt; (AWS), 1 said &lt;a href=&quot;https://azure.microsoft.com/en-us/&quot;&gt;Microsoft Azure&lt;/a&gt;, 2 have their own server farms they own and maintain, and 3 declined to answer. I’ve been developing with AWS for several years now, so that’s my go-to choice — and from the very small sample size (and the fact that Amazon’s business is really booming from AWS) it’s pretty clear where you should start first.&lt;/p&gt;

&lt;p&gt;Nobody exclusively said I needed to know system admin stuff, nor did I need to learn. But as a senior developer I have to say: knowing some command line commands, knowing the more common areas of a virtual OS and being able to modify a file on a remote server comes in very handy!
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;libraries-and-frameworks&quot;&gt;Libraries and Frameworks&lt;/h2&gt;
&lt;p&gt;Libraries and frameworks are groups of code using a language to make life easier. jQuery, Angular and React all rely on JavaScript, and make it better. Symfony and Zend for PHP. Django and webpy for Python. The list goes on for ages. There are libraries for just about everything, and as you build applications you’ll start making your own. So which libraries and frameworks was I asked most about? React. React again. Angular. And then React. Remember, all the positions I applied for were back-end. But that didn’t stop them from asking about React and Angular. Third on the list would be jQuery UI, followed by Bootstrap, then several graphing charts (D3, Highcharts, Google, etc.). When it came down to back-end libraries or frameworks, it was always “adapt to our way of life”, which isn’t the wrong approach, honestly. But each company had their own way of doing things with a specific language. I went for a PHP interview, they asked about Java. I went for a Java interview, they asked about Python. Numerous places asked about .NET (mostly out of confusiong about what .NET does, it seemed. Example on .NET confusion later).&lt;/p&gt;

&lt;p&gt;Within each language is a framework a company will stick with. Zend is common for PHP. Webypy for Python. Does that mean there’s a more common framework that companies tend to lean towards? Nope. There’s hardly any rhyme or reason other than “that’s what we started with; that’s what we’ll use for the rest of time”. So as a developer, is it realistic for you to learn &lt;em&gt;every&lt;/em&gt; framework in several languages? Absolutely not.&lt;/p&gt;

&lt;p&gt;Frameworks and libraries will always work against you. If you write React, they’ll want Angular. If you write jQuery, they’ll want React. If you use one library, they’ll want another. This friction worked against me in almost all my interviews. I’m well versed in the world of web and yet it struck me as strange that they somehow wanted all my weaknesses, and quickly brushed passed my qualifications. I don’t think this is a conspiracy, but I certainly think many companies are looking for too much from a single person. Again, I have &lt;em&gt;a lot&lt;/em&gt; of experience in various roles in startups and full companies — yet they wanted an unrealistic amount of experience for the pay they were offering. Offering $26/hour on a 6 month contract to manage 20+ people and 30+ technologies is hardly worth the headache.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: &lt;em&gt;If you have experience with a language but not with the framework a company is asking for, openly tell them, then go home and your homework. If you can, present what you’ve learned in a short period of time to the interviewers (you probably have their email addresses) and use that as leverage to prove to them that you are the right person for the job.&lt;/em&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;specialized-or-licensed-programs&quot;&gt;Specialized or Licensed Programs&lt;/h2&gt;
&lt;p&gt;The best opportunities I found (highest pay, in this case) worked with specialized programs. They didn’t make them in house, they licensed them from players like Oracle and Microsoft. You’ll &lt;em&gt;never&lt;/em&gt; know what they use until you ask. Sometimes you can find information on sites like Reddit or Quora from old employees, but most of the time you’re walking into the room blindfolded. And if you don’t have experience with their exclusive programs or systems, tell them that, and then sell yourself on how fast can you learn, and what similar or related experience you have. How can you get as close to a “Yes, I know that” can you get without lying?&lt;/p&gt;

&lt;p&gt;I made it as far as the very last round in an interview process where this was the deciding factory. I always ask, “If I don’t get the position, no hard feelings, but can you provide feedback so I can improve?” (word for word). And guess what? I didn’t get the position because someone else had experience with the software they wanted to use (3rd party data housing software). As a developer, I thought it was weird since all my other experience clearly made up for this, and the fact that the software they wanted to use required you to write your own library to access the data anyway. What I could bring to the table was perfect for their organization. But in the end, it didn’t matter.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A moment of clarity made me realize that most companies don’t want you for you can provide, they want you for an exact position, no questions asked.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To me, this was backwards. I come from a startup background, where if someone has the personal skills (desire to learn, leadership, communication skills, etc.) you can teach them the technical skills, especially if they already have most of the talent you require but are just a small leap away from being that perfect employee. Established companies seemingly don’t want this (that’s not to say all companies are like this!). It was at this point I started looking at local companies — that turned out to be much more fruitful than these large companies that didn’t want to invest in you (they just want to spend a short lifetime looking for one person who may or may not be able to do the job).&lt;/p&gt;

&lt;p&gt;Here’s a lesson I learned: bigger companies want specialization, smaller companies want well-rounded people. This rule doesn’t apply everywhere, but it’s holds true quite often. Perhaps this will help you get your first job as a developer — look locally (doesn’t have to be your city to be a small business).
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;agile-software-development&quot;&gt;Agile Software Development&lt;/h2&gt;
&lt;p&gt;You can be the best coder in the world, but many places won’t look at you twice if you don’t know what Agile Development is.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Agile_software_development&quot;&gt;Here’s a Wiki page&lt;/a&gt; to get you started on the wide world of Agile.&lt;/p&gt;

&lt;p&gt;Every single company that mentioned Agile mentioned &lt;a href=&quot;https://en.wikipedia.org/wiki/Scrum_%28software_development%29&quot;&gt;Scrum&lt;/a&gt;. This article isn’t meant to teach you about either of those, but if you go into an interview and they talk about Agile and Scrum development, you should know what they’re talking about and be able to participate in that part of the conversation.&lt;/p&gt;

&lt;p&gt;Companies use this term (Agile) to make themselves feel modern and relevant, and to seem hip, updated and efficient. But the truth is they do a lot of talking. They don’t actually follow all the rules of an Agile framework. But they want to believe they do. So if you know about Agile Development and can contribute to their vision of perfectly controlled processes, that will certainly help you in an interview. Remember, you’ll be paid to code but your future depends on the future of the company and it’s leadership.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;things-nobody-cared-for&quot;&gt;Things Nobody Cared For&lt;/h2&gt;
&lt;p&gt;Hot topic here! If you need to know everything, there can’t be anything people aren’t looking for, right? Wrong. Here are some of the more common elements to a great web service/app that nobody mentioned, and when I mentioned these they were quickly dismissed. (Take this lightly, this does not apply to all companies!)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;
&lt;br /&gt;
While docker is useful, generally speaking, most companies didn’t care for it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud&lt;/strong&gt;
&lt;br /&gt;
Unless it was a static file on a CDN (Content Delivery Network; ie. How you can use Boostraps libraries without hosting the file), hardly anybody cared. Even scaling servers up and down — no interest.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ruby on Rails&lt;/strong&gt;
&lt;br /&gt;
Nobody cared about poor old Ruby.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;jQuery&lt;/strong&gt;
&lt;br /&gt;
Nobody explicitly said they wanted jQuery. It was assumed you had it, like how it’s assumed you know Hypertext Markup. Knowing jQuery was not a point in my favour, even though it was needed in all projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Growth&lt;/strong&gt;
&lt;br /&gt;
Both corporate and personal growth; everybody wanted me because I could code. They also wanted me to have leadership skills, but didn’t want me to use them to grow their team members. They cared about me growing my development skills as long as it favored them, but nothing beyond that (that’s good and bad).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Go&lt;/strong&gt;
&lt;br /&gt;
Like Ruby and Docker, nobody wanted it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Experience&lt;/strong&gt;
&lt;br /&gt;
The bigger companies didn’t care that I’ve been in this game for almost two full decades now. They didn’t care about other accomplishments. They asked about open source contributions, but these are for-profit companies paying for your time, they usually don’t care about outside of work contributions (unless they are trying to build a positive corporate culture).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Analytics/Data&lt;/strong&gt;
&lt;br /&gt;
Unless their product was data-centric, they didn’t care about optimizing conversion rates. They had a project in mind, and it was going to be built their way or no way (and in one case the company closed the position entirely).&lt;/p&gt;

&lt;p&gt;I don’t want this section to sound negative, but it’s important that it highlights the fact that you will be hired for a very specific role. If you have an ounce of entrepreneurship in your blood, they will want to see it in the interview, but don’t be offended if they don’t want to see it so much in the work place.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;recruiting-agency&quot;&gt;Recruiting Agency&lt;/h2&gt;
&lt;p&gt;I mentioned at the start of this article that I used a recruiting agency. I chose one and went with it. I figured, “why not multiply my efforts and let someone else job hunt with me, for me?”. The person that worked with me was outstanding, professional and always excited about new opportunities. Through this agency I was setup with 3 of the 12 interviews. Not exactly “doubling my efforts”, but the 3 biggest companies were from this agency. And they paid the most. And they were also the companies with the most unrealistic expectations for the typical developer — from my experience, that’s but one way to filter out people who have very little confidence. And this agency got me through the door of the 3 biggest companies I met with in the last 2 months. And it cost me nothing.&lt;/p&gt;

&lt;p&gt;These types of agencies usually make money when they place you in a job, so if you get an offer for $35/hour, they definitely placed you at a higher rate (or receive a finders fee). But if it gets you through the door and gets you the experience you need, why not?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: &lt;em&gt;If you’re looking for interviews, let other people help you.&lt;/em&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;job-listings-are-lies&quot;&gt;Job Listings Are Lies&lt;/h2&gt;
&lt;p&gt;Bold title for a bold claim. Of all the positions I applied for and got interviews for, nearly all of them had a list of “requirements” and “nice to haves”. After looking at each job listing, going for the interview, and re-reading the job listing, it turns out those “nice to haves” are basically nonsense. If you have them, great — try to sell yourself on those points. If you don’t have any of the bullet points in the “nice to have” list, ignore it. Don’t let that hold you back. In a minute I’ll prove to you how insane a job listing can be.&lt;/p&gt;

&lt;p&gt;The big one is the “requirements” list. I’ve been developing for a long time and I’ve watched these job listings evolve from realistic, to unrealistic, to insane. Ever see a job listing that says “Must know PHP and .NET?” — yeah, those don’t play well together and come from opposite ends of the web development world. If you have ONE of those, apply. The worst that will happen is you’ll get the interview and find out they want the other language. ¯_(ツ)_/¯&lt;/p&gt;

&lt;p&gt;Here’s the very first job listing that I found in my Inbox this morning. I just picked the first one, I didn’t even pre-read it for this article. And like most job listings, this one is a perfect example.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*ZKHBM9LpAwtbYpNLIVSkxA.png&quot; alt=&quot;screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;^ Took that from a screenshot, thus the image. Front-end developer but back-end coder? Oxymoron alert.&lt;/p&gt;

&lt;p&gt;The problem isn’t even the conflicting languages they ask for, it’s how long the list can be, or how much experience they want and are willing to pay. Remember, you’re a developer doing a valuable job, your time is worth more than most developers think.&lt;/p&gt;

&lt;p&gt;Going back to this same listing, here are the requirements (I hope you can read the screenshot).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*_GWvbr7QMGvNVmXWKD_pAQ.png&quot; alt=&quot;screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s break this down. A PHP developer needs to know JS, jQuery and WordPress Plugins? Plugins, sure, but JavaScript and PHP don’t communicate, unless they meant to say “Ajax”. You must do responsive design; design as a PHP dev? So they want full-stack, not front-end like they said? Oh look at this, they want 4+ years of experience. Sorry, but you don’t need 4 years of experience to rock WordPress — perhaps more like 2 or 3 solid WordPress based projects. Wait, why is ASP.NET in here? This was in the “requirements” list as “an asset” (optional) for a PHP developer but for the front-end role? This isn’t making any sense at all.&lt;/p&gt;

&lt;p&gt;So let me get this straight, they want a WordPress developer (PHP) who writes ASP.NET, doesn’t use WordPresses responsive design but uses Bootstrap instead, with 4+ years of experience, who can optimize code, who does all the front-end and back-end work, who’s considered a front-end developer?&lt;/p&gt;

&lt;p&gt;No wonder people lie on their resumes. This job requires nonsense. If I break through all the crud on this listing, this is what it would say:&lt;/p&gt;

&lt;p&gt;“We’re looking for a WordPress developer who’s not brand new, and leaves comments in their code. This person might need to work with Joomla or Drupal. Oh, and you need to be reliable.”&lt;/p&gt;

&lt;p&gt;But their confusing list of requirements makes people think twice about what developers can do, and so developers go down this road of trying to learn everything. And thus, you never apply.&lt;/p&gt;

&lt;p&gt;But this entire listing seemed fictitious. Most likely because they want to seem bigger than they really are (or they don’t know code talk). What this listing is telling you is a complete lie. You would not believe how many of these I’ve seen in the last 60 days. If I wrote a click-bait headline based on these job listings, it would say “Hundreds of job listings are lying to you. All them will blow your mind!”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: &lt;em&gt;Apply for any job that you’re semi-qualified for. Either you will learn the skills for the job, learn from the interview, or you’ll move on to better things.&lt;/em&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;how-i-get-interviews&quot;&gt;How I Get Interviews&lt;/h2&gt;

&lt;p&gt;Getting interviews is like doing sales: it’s a numbers game. You know who to target (based on your skills), you know how to pitch them (resume + cover letter), and then it boils down to reaching as many people as possible. All the interviews I went to were from companies where I didn’t know anybody, so there was no favoritism or nepotism. But I did take a sales approach.&lt;/p&gt;

&lt;p&gt;First, I customized my resume. I have about 6 different resumes now. They all get the same information across but they are targeted towards different types of companies. Say a company wanted a front-end developer who can do some Photoshopping on the side — the resume (C.V.) I’d submit would highlight those skills over my back-end skills. The projects and experience in this version of the resume would reflect the same changes — I’m not hiding anything, I’m not lying, but I am tailoring my resume to the job. A front-end position shouldn’t care about system admin skills, and a back-end position should care about the 174 JavaScript libraries I’ve used throughout my life.&lt;/p&gt;

&lt;p&gt;Next, write a custom cover letter. If a company gives you the option to upload or send a cover letter, take that opportunity! And don’t be lazy about it — write a solid cover letter that exposes you as a benefit to the company. Do your homework on the company, and tell them why you’d be a great consideration for the position. Keep it short and sweet, but show them you know how to use Google, too.&lt;/p&gt;

&lt;p&gt;Doing this, I applied at 24 places and got interviews from 12. Well, 9 were from me and 3 from the recruiting agency. But from observing others, this was obviously a high conversation rate.&lt;/p&gt;

&lt;p&gt;On two of the job listings, they asked me to email them my C.V., so naturally, I didn’t. I thought, “that’s boring, just for fun let’s try something different”. So I wrote a totally quirky email, made a Star Wars joke… I didn’t even use perfect punctuation. But it did reflect my personality quite well. And it got me through the door. In fact, I even admitted I don’t write the languages they do. I’ll admit, the companies did say they like to have fun and like lighthearted people, so I was fun and lighthearted. Again, a tailored approach.&lt;/p&gt;

&lt;p&gt;My advice on getting the interview for a developer position is to tailor your first impression (cover letters, email, resumes, etc.). And apply like crazy. It’s a numbers game. Each interview you do you’ll learn a lot about what companies are looking for, and that’ll prep you for the next one. You’ll even stop getting anxious and think “Another interview? I’ll pump this out and get a snack after.” And you should know that you won’t fit in everywhere, and they won’t fit with you every time, either.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;culture&quot;&gt;Culture&lt;/h2&gt;
&lt;p&gt;Jobs are nice, they pay the bills, but money doesn’t motivate you or make you feel fulfilled. That’s where corporate culture comes in. Do they treat you well, are you growing as an individual, do they want the best for you? If you have numerous job offers, weigh the benefits of each place. Maybe one place pays $60k/year, but is hardly rewarding, meanwhile another place offers you $45k/year but has health benefits, Friday nacho nights, and friendly people. Money is nice, but if you come home stressed (the unhealthy kind) it might not be worth it.&lt;/p&gt;

&lt;p&gt;Development takes a toll on you over time. You need to know that there is no development if there is no developer.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;questions-i-was-asked&quot;&gt;Questions I Was Asked&lt;/h2&gt;
&lt;p&gt;Here are some of the questions I was asked. Many of these are scenario based because the company wants to know how you would handle a certain situation, given your experience. Many times there is no right or wrong answer, they just want to predict your behavior ahead of time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Have you worked in a team of 20 or more developers in one place?&lt;/strong&gt;
Nope, not all in the same building at least. Remotely I have, and I’ve lead teams of nearly 2 dozen remotely. So while I don’t have the in-person experience, I have the experience of dealing with something I would consider to be more difficult: time zones and communication barriers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: &lt;em&gt;Notice how I got as close to the right answer as I could without lying? I didn’t even “bend the truth”, but I took the next closest experience I had and sold that.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If a customer wants a new feature at the very last minute, but there’s no more budget or time, what do you do?&lt;/strong&gt;
This depends on the relationship with the customer. Some people are a little more hot headed than others, so that needs to be taken into account. But I would handle the situation by…… {insert your answer}&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You have a user who selects numerous options and wants the data returned in a easy to understand manner, what technologies would you use and how would you execute the code?&lt;/strong&gt;
I’d use a JavaScript front end to put some of the load onto the user so the server can use it’s resources on other actions. The form would Ajax data to the server using the POST method, the server would collect, validate and sanitize the users input, the database would collect the data, and return all the data in a JSON format. Either JavaScript can parse through it all, or the server can choose to return the already aggregated data. JavaScript would then put the information into a graph. This entire feature would act like an SPA (Single Page Application) so the user knows what’s happening and thus will stay on the site longer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It’s Friday afternoon, everyone else has left for the weekend early, you only have 45 minutes left and the next major task will take at least an hour. You aren’t allowed overtime, do you go home early?&lt;/strong&gt;
No. I take the 45 minutes to prepare and plan my workload for Monday morning so I can hit the ground running instead of trying to figure out where I left off.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Those are answers that typically get good responses. Just a few sentences on each answer, make it direct but friendly (don’t sound like an email, but be somewhat educational and informative). There are more questions below, but I won’t leave my answer — they are from my interviewers to you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You finish a week long sprint and you’re presenting the final code to your project manager, but he doesn’t understand everything you’re saying, he doesn’t understand the intricacies of coding. What do you do?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The customer is saying “you didn’t do anything in a month!” but you actually built the entire back-end and he couldn’t see it. What would you say to this customer?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Can you explain the difference between MySQL and MongoDB?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you know what a CSV is? How is it different from a TSV?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You’re working on 3 major projects at one time. You send the finished work of the first project to the UI team and want to start working on the second project. But the UI team comes back with a request for more details from the third project. What the UI team wants will cut into your deadline for the second project, how do you handle this?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tell me why you’d use React over a library like jQuery.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Can you tell me the difference between jQuery and React?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What’s your favorite programming language, and why?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you work on open source projects? Why or why not?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What do you do outside of work?&lt;/strong&gt; (I code for fun, which felt like the wrong answer but it was true)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is a front-end language, and how is it different from a back-end language?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You’re making a single page application with whichever JS library you chose, it sends constant requests to the server on every action, how should the server format the data before returning it?&lt;/strong&gt; (ie. JSON, text, html)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Is NodeJS multi-threaded?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why is NodeJS more scalable than, say, PHP?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You’re given a task to build a website for a customer. It has to be responsive. All they want is a blog and a way for readers to subscribe. Do you build something from scratch, or do you give them WordPress with a plugin you like? Why did you choose that option?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you know what a RESTful API is?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is your salary expectation?&lt;/strong&gt; 
Note: I find this question to be a trap. If you say a number that’s too high they won’t hire you, if you say too low they won’t value you, if you give a wide range they think you have no idea what you’re worth. My answer on this varies on the position and responsibilities. But ultimately my initial answer sounds a lot like this, “I’d love to talk economics with you, but let’s figure out if I’d be a good fit in your business first. If we conclude that I would be beneficial to {company_name}, then we should talk about wage/salary.” If after this like you and want to hire you, you have more leverage with your salary and you’ll be judged far less than. It also shows them you aren’t applying purely for the money. Those types of employees are expensive.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you have any side projects? If so, have any of them gotten any real attention/traction?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Say you have 3 tables: users, settings and pages_viewed. Some users turn off the “track my page views” setting. You want to get the total number of pages viewed by each user who has the setting turned on, in the last 4 days, grouped by the unique user and the page they viewed. What would your query look like?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Then there were several questions based on terminology. Do you know what Agile means, do you know what aggregation is, do you know what OOP means?&lt;/p&gt;

&lt;h2 id=&quot;what-exactly-are-employers-looking-for&quot;&gt;What exactly are employers looking for?&lt;/h2&gt;
&lt;p&gt;In two single word answers: everything, or flexibility. There are some employers who want everything and that’s not reasonable. Ignore them, they are hard to please and waste too much of your time. Then there are the rest of them who ultimately want flexibility. You need to be flexible in the way you work with others, how you code and which language you code in (look for similarities). To extend the answer of flexibility just a little bit, employers are also looking for reliability and commitment. It’s crazy how many people are unreliable in modern business, and how many don’t want to commit to very much. But hiring and training people is an expensive process for companies, so before they decide to chose you over someone else, they need to feel like you’ll be there for them, that they are making the right choice, and that once you’re in you’ll be flexible enough to make things work. If you were in their position, wouldn’t you want the same thing?&lt;/p&gt;

&lt;p&gt;If you’re applying for a front-end position, you’ll probably be looking for a company that has 15–50 developers and focuses on web development (or apps). Any smaller and your risk applying for a front-end position at a company there everybody does everything. The same rule applies to back-end positions. If you do full-stack development, you can go anywhere that doesn’t need specialization in one particular area. But if you’re ultimate goal is to make a lot of money, specialization is what you’ll want.&lt;/p&gt;

&lt;p&gt;One thing I always do, which has worked for me for years, is to apply humility into my work and interviews. Don’t get me wrong, I’m good at what I do. But am I the best? Absolutely not. Not even close. I’m always willing to learn more, and make sure that’s known. Even in areas of expertise, if I can learn more from someone else, I’ll take that opportunity!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: &lt;em&gt;When applying for a position, don’t get attached to it. Apply at several other places. Never place a bet on someone you don’t know. If you don’t hear back but see another job posting, apply again. Be persistent.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;interview-tips&quot;&gt;Interview Tips&lt;/h2&gt;
&lt;p&gt;Once you get to the interview, you’ll want to rock their socks, or you’ll want to learn. Those are your two objectives: do well and learn lots. With a little emotional intelligence you can figure out which answers you gave did well and which ones didn’t. Here are some tips on what worked well for me once I get into the interviewing room:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Show up on time, be polite, and any small talk should be tech talk.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Always go into an interview knowing about the company. Google is your best friend.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Show some humility. You aren’t Stephen Hawking; admitting you don’t know everything is not the weakness it was 20 years ago. Just be willing to learn what you don’t know and make it known you’re willing to learn.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Share your experiences and projects. Don’t brag, but sharing as if you’re among friends is fine. Try to keep your stories and projects relevant to the questions asked.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Take a moment to think about your answers before speaking. What seems like a lifetime in your head is usually only 2 or 3 seconds. Nobody minds the 2 second delay before a good answer.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let them know you’re not just a person with glasses behind a computer — you’re a social human being who knows how to talk just like everybody else. Those adorably awkward developers are fun on TV, hard to work with in real life.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;If you’re confident enough, you can ask for feedback if you don’t get the position. Everyone says they will give you feedback, but only about half of the companies I spoke with did.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you’re in an interview and you feel like you’re in over your head, find the smartest and chattiest person in the room and ask that person “If I had to learn one thing tonight for this job, what would that one thing be?”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Your goal for every interview is this: information. The more you know about what this company wants, the clearer your direction will be. If they want an Angular dev and you write Angular, talk Angular. If you don’t write Angular… then you have a better idea of what you need to learn immediately to keep making progress. If 2/3 jobs want React, learn React. Nothing will guide you better than this. No amount of Googling, no amount of reading about trends will guide you like a potential employer or two telling you what they need. At the end of the day, they are hiring you to solve their problems.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;where-bootcamps-go-wrong&quot;&gt;Where bootcamps go wrong&lt;/h2&gt;
&lt;p&gt;Bootcamps are a fantastic idea! But they forget one very important aspect of life: not all economies are made equal. If they teach you the MEAN stack, that doesn’t necessarily translate into you getting a job working with the MEAN stack. If you live in a concrete jungle, that may not apply to you. But for everyone else who doesn’t live in LA, NYC or Toronto, you should consider looking at job listings online first. See what they want, cut through their crap, and find a pattern. If 3 companies prefer React over Angular, you’ll increase your probability of employment by learning React. Maybe where you live there are mostly WordPress sites: learn WordPress. Master it! Don’t throw away your bootcamp training, it’s probably taught you the fundamentals of programming you need to learn any other language on the web. But also know that flexibility is key to success. Can you adapt when you need to?&lt;/p&gt;

&lt;h2 id=&quot;questions-from-the-group&quot;&gt;Questions from the group&lt;/h2&gt;
&lt;p&gt;There were some great questions that were pointed out, and I think this is a great place to put these questions. Everyone will stay anonymous in this section.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Where am I located and what’s the market like?&lt;/strong&gt; 
This experiment was in Edmonton, Canada. Population about 850,000. I would say there are more developers than needed here so companies can be a bit more selective. But that said, there’s not a huge industry for web development here, either.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Did your age have any affect?&lt;/strong&gt;
I think so. Going to interviews a few years ago I looked very young and I think that made some companies turn away. This time I went in purposely looking my age, and only wore a tie once. But this is hard to measure since I have different practices now vs. back then. There is a general distaste for older developers (age 40+) for some reason, although the older devs I’ve met make me look like a rookie. And most “normal” (non-Google or Facebook) companies look for people with life and live server production experience, so they don’t want people that are too young. Experience translates to trust for a lot of people.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you recommend any books?&lt;/strong&gt;
I’ve bought a number of books, they didn’t teach me a single thing. My best advice: head to a bookstore, pick up a thick coding book, look at the chapter titles and if there’s one that you don’t understand, Google it. There’s nothing in the typical coding book that you can’t learn from a quick Google and Stackoverflow.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discrimination?&lt;/strong&gt;
Where I’m from, my background, even my lack of formal education and interests have hardly been a hindrance. I’m also not the most articulate speaking person, either. Outside of my C.V., I’m pretty average. I watch Game of Thrones and Halt and Catch Fire, just like everyone else. I didn’t even have friends pulling strings to get interviews or anything like that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Will employers hire freelancers?&lt;/strong&gt;
You bet they will! Freelancing means you’ve most likely done a lot of work in a lot of areas, giving you unique experience in several scenarios. There are some people that won’t hire freelancers, but they are few and far between. Chances are they got sour because they worked with a freelancer who “knew everything and could never be wrong”. Don’t be that person and you’ll be fine.&lt;/p&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;
&lt;p&gt;My objective for an article like this is to shed some light for the upcoming developers who are trying to get jobs. There’s a lot of potential coming through the pipeline every day and I see a lot of people facing disappointment because they feel like they are unemployable. That shouldn’t be the case. The facts are: there are jobs out there for developers, you are employable, and the general global economy is in the gutter at the moment. The opportunities are there, they’re just harder to get.&lt;/p&gt;

&lt;p&gt;I have a pretty solid solution for those that can’t manage to find a job in web development. It does require more work than a 9–5 job but you’ll gain experience that a job just can’t teach you. If that’s something you want to hear about, reach out to me somehow: make some noise on Twitter or message me on Facebook, and if there’s enough interest in that I’ll write another (hopefully) helpful article!&lt;/p&gt;

&lt;p&gt;BIG thanks to all the companies that interviewed me. It was fun!&lt;/p&gt;

&lt;p&gt;That’s it for this article! Let me know what you think in the comments below or Tweet at me. If you liked what was in here, please share it with your fellow developers in those awesome Facebook groups you’re all apart of! You never know, maybe it’ll help someone else you know.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally posted on &lt;a href=&quot;https://medium.com/operation-code/what-are-employers-looking-for-in-a-developer-95df809a57a4#.nhq96sqvf&quot;&gt;Medium&lt;/a&gt; by &lt;strong&gt;Kalob Taulient&lt;/strong&gt;, CEO &amp;amp; Founder @ Arkmont.com (we’re looking for amazing educators!)&lt;/em&gt;&lt;/p&gt;</content><author><name>Kalob Taulien</name></author><category term="Article" /><summary type="html">Over the last 2 months I’ve been on numerous interviews. 12 to be exact. And the companies range in size from small and local, to large and national. I won’t list out which companies are using which technologies because it’s not my place to expose that information, but in this post you’ll I’ll highlight the sizes of the companies in relation to the technologies they use, and I’ll include other details like OS preference and infrastructures.</summary></entry><entry><title type="html">What One Dark Night with the Army Taught Me About Shipping Software</title><link href="https://operationcode.org/blog/2016/09/30/what-one-dark-night-with-the-army-taught-me-about-shipping-software.html" rel="alternate" type="text/html" title="What One Dark Night with the Army Taught Me About Shipping Software" /><published>2016-09-30T00:00:00-04:00</published><updated>2016-09-30T00:00:00-04:00</updated><id>https://operationcode.org/blog/2016/09/30/what-one-dark-night-with-the-army-taught-me-about-shipping-software</id><content type="html" xml:base="https://operationcode.org/blog/2016/09/30/what-one-dark-night-with-the-army-taught-me-about-shipping-software.html">&lt;p&gt;Not many people know I spent time in the Army many moons ago. I guess I don’t look much like G.I. Joe, so I can appreciate their surprise when this is uncovered. Nevertheless, it’s true; I joined the military six years ago.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*6zbiHhNIda39PTNIsjeAyQ.png&quot; alt=&quot;image of GI Joe&quot; /&gt;&lt;/p&gt;
&lt;center&gt;Yeah, that ain't me.&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Naturally, I learned a lot— more things than I had anticipated. But what’s been most surprising is how the half-life for these lessons has extended beyond the barracks and STX (situational training exercises). I probably shouldn’t be surprised, but they’ve been useful in my day-to-day work.&lt;/p&gt;

&lt;p&gt;I thought I’d share one of those experiences.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I now work as a Product Manager for a growing software company. The two worlds don’t seem obviously-related. They aren’t at first glance. I don’t wear a uniform, and I don’t have to shave every morning (thank. god.). There are no guns or Humvee’s. Despite this, it’s been sort-of-astonishing how many times I’ve connected something back to an experience I had in the Army.&lt;/p&gt;

&lt;p&gt;Recently, our team has struggled with the idea of how much “process” we want. There was a vague understanding that more was needed, but exactly “how much” was left to debate. Some? A smidgen? A lot? There was no clear-cut answer. There rarely is.&lt;/p&gt;

&lt;p&gt;For context, we’ve been growing quickly since we launched our product in 2009. We added seventy-five new teammates just this past year. As the team grows, things understandably get more complicated. Communication becomes more difficult. Decisions can take longer. There are more viewpoints to account for. Like anything, there are trade-offs. There is also more collective experience. More diversity in thought. More hands to help.&lt;/p&gt;

&lt;p&gt;Our application is also segmented into three smaller products, and the needs, constraints, maturation, and user expectations for the three aren’t always the same. This poses a challenge to deciding how we want to update and maintain the application. We are one team, with one code base, three primary products, and many different visions for how much process we need on the dev side of the house. Do we need managers? Should we all be forced to use the same release process? Do we need to build specialized development tools? We even joke that one engineer was named “Rules” while the other should be called “Guidelines.” We are at an impasse.&lt;/p&gt;

&lt;p&gt;Somehow this triggered a memory from the Army in my strange brain.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Flash back to 2010. There I am. Twenty-two, clean shaven, wide-eyed. The very picture of youth. (haha) I’m at Fort Knox, Kentucky. It’s July — that means the ambient temperature is “face-of-the-sun” and the humidity is at “monsoon rain storm.” I’m miserable.&lt;/p&gt;

&lt;p&gt;There are dozens of young soldiers just like me spread out, lying prone on the gravel that borders the edge of a jungle that looms just in front of us. Our dirty, “digital” uniforms and patrol caps blend in with the grey color of the gravel, and we look like a peculiar pattern of many-colored faces dotting the ground. It’s dusk, and soon each face is accompanied by a sudden eerie red glow — the filtered light coming from each of our flashlights. There’s something alien about it all. We’re all silently scribbling and making notations on small maps laid out in front of us. No one speaks. Shortly after, one of us abruptly gets up and heads steadfast into the dark forest. It swallows him whole. The only thing you can see is that red orb bouncing up-and-down and then disappearing into the black. Soon after, another soldier sprints into the forest. She’s gone. Then another. One-by-one we‘re all eventually consumed by the jungle. We’re all after something.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*MZAUF6s4Kc7tcULLYprehA.jpeg&quot; alt=&quot;image of night land nav&quot; /&gt;&lt;/p&gt;
&lt;center&gt;Source: https://warriorforge.files.wordpress.com/2012/06/nightlav.jpg&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;We were practicing something called “night land nav.” — one of the many fun things you’re introduced to in the military. It’s the Army’s twist on hide-and-go-seek. You’re taught how to get around using a map, protractor, and a Tritium-illuminated Lensatic Marching Compass. It makes sense, really. Soldiers should be able to get to important way-points.&lt;/p&gt;

&lt;p&gt;The objective is to locate several small metal stakes hidden throughout the terrain. The stakes are each separated by several kilometers, obscured by vegetation, and are only a meter tall. Each is equipped with an alpha-numeric label and a “clacker” that you use to stamp a card you’ve been given to verify you’ve found an assigned way-point. You can only use red-colored light, or else you’d compromise your night vision. It’s an individual endeavor. You aren’t allowed to collaborate; you can’t consult your battle buddy. There’s a time limit.&lt;/p&gt;

&lt;p&gt;Truth be told, this was one of my favorite exercises. I love being outdoors. I enjoy having a clear purpose, and I liked the time to myself (something that’s a rarity in the Army). I also had a natural affinity for it; I am a stake-locating machine.&lt;/p&gt;

&lt;p&gt;Obviously, the Army doesn’t point young soldiers toward the jungle and tell them, “Good luck.” Prior to stepping off we’re all prepared with some simple tactics we can employ to accomplish our task. (Gasp! A small process of sorts.) Simple tactics.&lt;/p&gt;

&lt;p&gt;It’s fairly basic in theory, and somewhat more complicated in practice. You have a map that’s divided into equal-sized squares. The squares are organized into a grid, and the grids all have corresponding coordinates. This is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Military_grid_reference_system&quot;&gt;Military Grid Reference System&lt;/a&gt; (MGRS). You’re provided a sheet of paper with several eight-digit grid locations for your stakes. The eight-digit location is accurate to within ten meters (around thirty feet). You start by sitting down and using your protractor and pencil to plot your points on the map and get a lay of the land. You usually take note of identifiable terrain features — like spurs, draws, hilltops, cliffs, saddles. You can triangulate your position on the map by using these landmarks later on. You’re taught how to measure distance by walking a hundred meters and counting the number of times your left foot strikes the ground. (My pace count is sixty-three left steps to every hundred meters.) The lensatic compass allows you to determine direction. You formulate a basic plan, and then head off.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*wYUMgoAbBlQUWOb0ipw75g.jpeg&quot; alt=&quot;image of compass&quot; /&gt;&lt;/p&gt;
&lt;center&gt;The tools of the trade&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;There I was. It was hot outside. My uniform’s coarse cloth was now heavy and sticking against my skin, which irritated the many insect bites peppered along my arms and legs. I only had a few hours to find the stakes spread out across the Ft. Knox jungle.&lt;/p&gt;

&lt;p&gt;Like the others, I was lying prone on the gravel, which made it difficult to lay the map flat. It was hard to make out the green-colored terrain markings in the red light. The pencil couldn’t be bothered to work in the rain. But I got it done. I made a basic plan. I had a way forward, and I headed off into the darkness.&lt;/p&gt;

&lt;p&gt;My plan went to shit pretty quickly. The route I had planned was flooded at a certain point, and I had to take a long detour. The clearing I had wanted to traverse as a shortcut was now overgrown. My current circumstances forced me to reevaluate. Improvise. Adapt. I persevered onward. I trusted myself to overcome the obstacles. I still had the same simple strategies I could use over and over again to reshape my plan.&lt;/p&gt;

&lt;p&gt;Sometimes my new plan would work as if by magic or divine intervention. Everything went smoothly. I’d shoot an azimuth, count my steps, and would be rewarded with a satisfying CLACK at the stake. Success. I was learning. I realized I could anticipate where flooding might be by looking closer at the contour lines that indicated elevation on the map. Even still, the plan would inevitably turn to shit again.&lt;/p&gt;

&lt;p&gt;No kidding, my flashlight broke. I could hear the pieces rattling inside the housing. Its music seemed to celebrate and mock my impending doom. Luckily, the Army preaches “one is none; two is one.” I had a back up, but this light was much smaller and less powerful. It was almost impossible to see. My fortune had turned; the land-nav gods had looked down on me again. Nonetheless, I steadily reached my way-points.&lt;/p&gt;

&lt;p&gt;A few hours later, you could hear me crashing through the forest like a drunken bear. I was sprinting wildly toward my last point. I was in a foot race against time. The amazing thing was I didn’t have any discomfort. I wasn’t over-heated anymore. I didn’t notice the insect bites. The rain didn’t bother me. I later discovered I had formed a blister on the bottom of my left foot that spanned its entire length. It had swelled up and deflated like a forgotten birthday balloon. I hadn’t noticed. I hadn’t noticed because I was absolutely focused on the task at hand. I was like Gollum in pursuit of the One Ring.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*SstySOHOtdJXgOPBAw7ZcA.jpeg&quot; alt=&quot;image of Gollum&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;I arrived to a small opening in the woods. Panting. Crazed. Wild-eyed. My calculations had indicated my last stake would be nearby. But where was it? Had my faulty plan betrayed me again? Had my compass broken, and led me astray? I could have panicked. I nearly did. Instead, I returned to my simple strategies.&lt;/p&gt;

&lt;p&gt;Remember, the eight-digit grid is only accurate to within ten meters. I had been taught how to handle this. I just needed to make slowly-widening concentric circles around where I thought the point should be. Eventually, I’d have to run into the stake as I completed my orbits.&lt;/p&gt;

&lt;p&gt;I made one loop.&lt;/p&gt;

&lt;p&gt;Nothing.&lt;/p&gt;

&lt;p&gt;Faithfully, I made two more loops.&lt;/p&gt;

&lt;p&gt;Not a thing.&lt;/p&gt;

&lt;p&gt;I started to doubt. I had to continue on.&lt;/p&gt;

&lt;p&gt;At the start of my next cycle my boot struck something. It struck victory. (haha) My nemesis now stood at my feet. Its little steel body was twisted downward toward the wet ground and was partially covered with undergrowth — making it difficult to see. But its trickery had been no match for this cool-headed warrior. I bent down and moved the brush aside.&lt;/p&gt;

&lt;p&gt;“A15”&lt;/p&gt;

&lt;p&gt;I’d remember the name. May it R.I.P. (This foe.) I grabbed the clacker, punched my card, and began the long trek back to the staging area.&lt;/p&gt;

&lt;p&gt;A while later I returned to where it had all started. The eerie red glow had been replaced with an inky purple in the absence of the many flashlights. I turned my card in, changed out of my wet uniform, and unpacked my sleep system. Exhausted, I crawled into the camouflaged bivy sack and quickly drifted off to sleep. The clouds had cleared by now. (Of course, that was my luck.) I remember the upright trees had cut the silhouette of an elephant into the night sky — its trunk spotted with a famous constellation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*f0AS6w5WNN2B6EYkymg8lw.jpeg&quot; alt=&quot;image of night sky&quot; /&gt;&lt;/p&gt;
&lt;center&gt;source: http://www.onelifeonewhistler.com/wp-content/uploads/2014/09/SC-Trees-Night-SKy-SGD1.jpg&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Cool story, bro. But what’s this got to do with the maintenance of software?&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Okay, okay. I admit: I’ve been a bit tangential. I’ll loop it back now. How does this story relate to that dilemma at work — the impasse? For a while, I wasn’t sure where I stood on the whole thing. On one hand, It would be nice to have some clear-cut rules. On the other hand, I was afraid we’d end up creating miles of red tape. I mulled it over. It wasn’t an easy problem; there were merits on both sides. I realized my brain had done me a solid by dredging up this old memory. There was something to be learned here.&lt;/p&gt;

&lt;p&gt;It became more clear the more I contemplated it. My thoughts began to take shape.&lt;/p&gt;

&lt;p&gt;Here’s what I came up with:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Simple strategies trump rigid processes&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There wasn’t one magical solution that helped me find my way. I didn’t set out thinking, “I will walk 50 meters, pull out my compass, shoot a 178-degree bearing, put the compass in my left pocket, take a sip of water, continue 43 meters…” I knew I’d be prepared no matter what happened because I had a set of straightforward principles I could rely on. Any complicated process would have been too costly to use out there when it mattered.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Most soldiers found their way, but took different paths.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There were dozens and dozens of soldiers wandering the forest that night. None of us had the same combination of way-points, but the objective was the same: find all the points. How we got there was irrelevant. None of us had the same route. Each solider took the path that made the most sense given their starting point and their unique set of constraints and conditions. I’m sure some learned the hard way, but we were better for it in the long run. We could share the lessons we learned. The best solution is tailored to the surrounding circumstance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Start with a basic plan, and anticipate it will change.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My plan fell apart umpteen times. I anticipated it would, and that made it easier to adapt. A plan is a starting point. I would have failed and run out of time if I had spent too much effort devising the “perfect plan.” It was important to just start moving.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;You don’t need fancy tools.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Would it have been easier if I had a GPS and four-wheeler? Definitely. Was the compass, flashlight, map, and “know how” enough to get the job done? It was. I was able to hone my skills because I was forced to rely on simple strategies and basic tools. I became a better navigator because of it. Better tools would have made me more efficient, but they also would represent new complexities and points of failure — points of failure I likely wouldn’t have been able to overcome without a deeper understanding of terrain, map-reading, pace counts, etc. Tools can supplement understanding, but are not a replacement for it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Focus can override discomfort.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My discomfort diminished as the night wore on. I barely noticed the heat, weather, or exhaustion. I became so focused on my task that I couldn’t be bothered to be distracted by anything else. Similarly, teams can withstand a lot if they’re focused on a clear goal — everything else (the disagreements, lack of resources, etc.) take a backseat.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Do I think we need managers (in the traditional sense)? Nah. Do I think we need a process, or set of processes, that can be applied universally? Probably not; I believe there’s a balance, and that each small team can decide what works best for them and their unique context. What about development tools? I think we can get by with something lightweight, and build from there.&lt;/p&gt;

&lt;p&gt;This is just my position. Our team is still wrestling with this. We haven’t arrived to a decision. Overall, I’m thankful I work with people who care enough to have a stance, and I’m confident everything will work out. If someone like me can find a one-meter-tall stake in the ground. In a jungle. At night. In the rain. With just a compass, map, and a few basic strategies. Then I’m sure we can figure things out.&lt;/p&gt;

&lt;p&gt;Related Reading: &lt;a href=&quot;http://firstround.com/review/the-right-way-to-ship-software/&quot;&gt;The Right Way To Ship Software&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Let’s get more people involved in tech. Support veterans learning to code by checking out &lt;a href=&quot;https://www.operationcode.org&quot;&gt;Operation Code&lt;/a&gt;, and help “increase the number of women of color in the digital space” by supporting &lt;a href=&quot;http://www.blackgirlscode.com&quot;&gt;Black Girls Code&lt;/a&gt;. Follow me on &lt;a href=&quot;https://twitter.com/BaxterMante&quot;&gt;Twitter&lt;/a&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally posted on &lt;a href=&quot;https://medium.com/operation-code/what-one-dark-night-with-the-army-taught-me-about-shipping-software-1879683685e7#.efhxkfoux&quot;&gt;Medium&lt;/a&gt; by &lt;strong&gt;Baxter Mante&lt;/strong&gt; (Not a cat. Co-Founder at Macaroon. Nerdery. Physics. Design. Software. Tech. Ramen.)&lt;/em&gt;&lt;/p&gt;</content><author><name>Baxter Mante</name></author><category term="Article" /><summary type="html">Not many people know I spent time in the Army many moons ago. I guess I don’t look much like G.I. Joe, so I can appreciate their surprise when this is uncovered. Nevertheless, it’s true; I joined the military six years ago.</summary></entry><entry><title type="html">Developer Goals 2016</title><link href="https://operationcode.org/blog/2016/09/29/developer-goals-2016.html" rel="alternate" type="text/html" title="Developer Goals 2016" /><published>2016-09-29T00:00:00-04:00</published><updated>2016-09-29T00:00:00-04:00</updated><id>https://operationcode.org/blog/2016/09/29/developer-goals-2016</id><content type="html" xml:base="https://operationcode.org/blog/2016/09/29/developer-goals-2016.html">&lt;p&gt;Starting Hack Reactor, I wrote down a few back-of-the-envelop goals that I wanted to accomplish by the end of the year. Since starting, I’ve talked to a lot of developers, read a lot of blogs, and let my mind wander during my morning runs. Despite attending a boot camp (which has been an invaluable learning experience!), I still want to maintain the ethic of a self-taught programmer, who makes it a personal responsibility to teach him/herself the skills to become successful.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*1p7dfw_YO5WkNgEIU3Nipg.jpeg&quot; alt=&quot;image of swimming&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My main intention remains unchanged. I want to become a software engineer who:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;is comfortable learning new technologies and developing in them despite not being an expert yet&lt;/li&gt;
  &lt;li&gt;relishes the hunt of debugging and figuring why software is not acting according to expectations&lt;/li&gt;
  &lt;li&gt;plays well with others — empathetic, fun to work with, and pushes the team forward in moments of indecision&lt;/li&gt;
  &lt;li&gt;clearly communicates complex topics so that people who are exposed to the concept for the first time can understand. Also, speak in a way that gets non-technical people stoked about technical projects!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;However, now that I’ve had more exposure to what’s possible in web development, I added a few experiences/ projects that I want to make a priority over the next few months.&lt;/p&gt;

&lt;p&gt;Goals kept secret have a way of disappearing or getting rationalized away when things get busy, so in order to make sure I stay committed to them, &lt;strong&gt;I’m posting them publicly:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a non-trivial React application with Redux as a state-container and Node as the back-end. This project needs to be well-documented, organized, and have a testing suite.&lt;/li&gt;
  &lt;li&gt;Explore alternative ways of User Interface that are not just browser-based webpages. Either build a mobile project with React Native, a server-side chatbot project, or combine both.&lt;/li&gt;
  &lt;li&gt;Create a useful developer tool that abstracts away a pain point in the development process. Publish this this tool into an npm package that gets 1000 downloads.&lt;/li&gt;
  &lt;li&gt;Continue to produce blog posts that provide value for other developers coming from non-traditional paths, especially veterans, and help solidify my mastery of concepts by using the &lt;a href=&quot;https://www.wikiwand.com/en/Learning_by_teaching&quot;&gt;learning by teaching approach&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Maintain my mental, emotional and physical health to allow me to continue to be a good person in stressful situations.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s it! There’s a few other things I’d like to do- continue to contribute to Operation Code, look for apartments in LA, run another ultra-marathon- but for the next few months, those are going to have to take a backseat to priorities.&lt;/p&gt;

&lt;p&gt;If you’re also becoming a self-taught developer, I’d love to see what your short term goals are- just drop a link in the comments section! I think planning in 3-month intervals allows you to stay flexible and keep yourself accountable over the short term.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you’re interested in learning JavaScript web development along with me, follow me on &lt;a href=&quot;https://twitter.com/jondeng&quot;&gt;Twitter&lt;/a&gt; and &lt;a href=&quot;https://medium.com/@JonDeng&quot;&gt;Medium&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally posted on &lt;a href=&quot;https://medium.com/operation-code/developer-goals-2016-2a2b3e660714#.xhn4g125c&quot;&gt;Medium&lt;/a&gt; by &lt;strong&gt;Jon Deng&lt;/strong&gt;, Web Worker. Currently &lt;a href=&quot;http://twitter.com/Snap&quot;&gt;@Snap&lt;/a&gt;. Formerly &lt;a href=&quot;http://twitter.com/USArmy&quot;&gt;@USArmy&lt;/a&gt; and &lt;a href=&quot;http://twitter.com/HarvardLaw&quot;&gt;@HarvardLaw&lt;/a&gt;. Likes running in the woods.&lt;/em&gt;&lt;/p&gt;</content><author><name>Jon Deng</name></author><category term="Article" /><summary type="html">Starting Hack Reactor, I wrote down a few back-of-the-envelop goals that I wanted to accomplish by the end of the year. Since starting, I’ve talked to a lot of developers, read a lot of blogs, and let my mind wander during my morning runs. Despite attending a boot camp (which has been an invaluable learning experience!), I still want to maintain the ethic of a self-taught programmer, who makes it a personal responsibility to teach him/herself the skills to become successful.</summary></entry><entry><title type="html">Meet CodeConf LA Attendee, Conrad Hollomon</title><link href="https://operationcode.org/blog/2016/06/27/meet-codeconf-la-conrad-hollomon.html" rel="alternate" type="text/html" title="Meet CodeConf LA Attendee, Conrad Hollomon" /><published>2016-06-27T00:00:00-04:00</published><updated>2016-06-27T00:00:00-04:00</updated><id>https://operationcode.org/blog/2016/06/27/meet-codeconf-la-conrad-hollomon</id><content type="html" xml:base="https://operationcode.org/blog/2016/06/27/meet-codeconf-la-conrad-hollomon.html">&lt;p&gt;My name is Conrad Hollomon, born and raised in Virginia Beach VA. I’m a US Army officer, currently on reserve status, one tour in Afghanistan from 2010-2011. In the military, I led IT and tactical communications teams, and worked hard to develop my fellow Soldiers and help them reach their full potential.&lt;/p&gt;

&lt;p&gt;I’m currently working for a venture-backed energy tech startup called SparkMeter, developing a smart metering system that’s being widely adopted by utilities serving customers in rural parts of Asia, sub-Saharan Africa, and Latin America and the Caribbean. It’s a great product that will help expand access to electricity for developing countries and emerging markets.&lt;/p&gt;

&lt;p&gt;I’ve been fascinated by technology since I was a kid, and throughout the years, that’s never changed. I got started in the tech industry working in QA at a video game developer called Harmonix Music Systems, where I learned what it was like to develop innovative products, and how engineers and designers came together to deliver awesome experiences for people. Ever since, I’ve been dedicated to helping people build great products, working hard to be a positive driving force for any team, by bringing an creative, collaborative, and decisive mindset to the table. The experience has taught me that innovation originates from inspiring leadership, and that inspiring leadership originates from service to others. This takes integrity, authenticity, and just a little bit of audacity, too. Why CodeConfLA?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Github is a cornerstone of the open source community, and having the opportunity to be a direct part of that community via this scholarship is a great honor. The way we build and design software has such a tremendous impact on the end product that users see, and use, and love - finding ways to learn from each other, finding ways to build cool things better and faster, is a true joy.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Conrad Hollomon is a test engineer for SparkMeter, an Army Officer and an operations volunteer for Operation Code. He resides in Boston, Massachusetts and is &lt;a href=&quot;https://twitter.com/hollomancer&quot;&gt;@hollomancer&lt;/a&gt; on Twitter.&lt;/em&gt;&lt;/p&gt;</content><author><name>Conrad Hollomon</name></author><category term="News" /><summary type="html">My name is Conrad Hollomon, born and raised in Virginia Beach VA. I’m a US Army officer, currently on reserve status, one tour in Afghanistan from 2010-2011. In the military, I led IT and tactical communications teams, and worked hard to develop my fellow Soldiers and help them reach their full potential.</summary></entry><entry><title type="html">Google for Nonprofits</title><link href="https://operationcode.org/blog/2016/06/17/google-for-nonprofits.html" rel="alternate" type="text/html" title="Google for Nonprofits" /><published>2016-06-17T00:00:00-04:00</published><updated>2016-06-17T00:00:00-04:00</updated><id>https://operationcode.org/blog/2016/06/17/google-for-nonprofits</id><content type="html" xml:base="https://operationcode.org/blog/2016/06/17/google-for-nonprofits.html">&lt;p&gt;Google is known for search. When we get stuck coding we Google every command line or inspect element error which leads to a blog, StackOverFlow, YouTube video, an article or a podcast that helps us get closer to the solution.&lt;/p&gt;

&lt;p&gt;Google is &lt;em&gt;also&lt;/em&gt; known for helping nonprofits get more done through the &lt;a href=&quot;https://www.google.com/nonprofits/&quot;&gt;Google for Nonprofits&lt;/a&gt; program.&lt;/p&gt;

&lt;p&gt;Prior to being enrolled in the program, we paid monthly to have a few email accounts for the team and this limited us in terms of growth and volunteer staff. That all just changed.&lt;/p&gt;

&lt;p&gt;These past two weeks Operation Code has grown leaps and bounds organizationally, as we started issuing Operation Code email accounts to the software mentorship, scholarship, employer services, deploy and advocacy teams. Google for Nonprofits is enabling Operation Code to better coordinate, integrate and synchronize our services to better serve our military veterans coding community.&lt;/p&gt;

&lt;p&gt;From their web page:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Google for Nonprofits offers organizations like yours free access to Google tools like Gmail, Google Calendar, Google Drive, Google Ad Grants, YouTube for Nonprofits and more. These tools can help you reach new donors and volunteers, work more efficiently, and tell your nonprofit’s story.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thank you so much, Google, for helping us in changing the world for those who’ve served our country.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;David Molina is Founder and Executive Director of Operation Code, and an ex-Army Captain. He resides in Portland, Oregon.&lt;/em&gt;&lt;/p&gt;</content><author><name>David Molina</name></author><category term="News" /><summary type="html">Google is known for search. When we get stuck coding we Google every command line or inspect element error which leads to a blog, StackOverFlow, YouTube video, an article or a podcast that helps us get closer to the solution.</summary></entry><entry><title type="html">Node Summit</title><link href="https://operationcode.org/blog/2016/06/08/node-summit-sf.html" rel="alternate" type="text/html" title="Node Summit" /><published>2016-06-08T00:00:00-04:00</published><updated>2016-06-08T00:00:00-04:00</updated><id>https://operationcode.org/blog/2016/06/08/node-summit-sf</id><content type="html" xml:base="https://operationcode.org/blog/2016/06/08/node-summit-sf.html">&lt;p&gt;Along with teaching coding skills, Operation Code is also dedicated to setting up networks for our military veterans.  One of the best ways to grow a network is to attend a technical conference.&lt;/p&gt;

&lt;p&gt;We are delighted that &lt;a href=&quot;http://nodesummit.com/&quot;&gt;Node Summit&lt;/a&gt; - which will be held on July 26-28 in San Francisco, CA - has granted us four scholarship tickets for use by our veterans.&lt;/p&gt;

&lt;p&gt;From their web page:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Node.js has taken its rightful place within critical enterprise environments and is well into “prime time”. Node Summit 2016 will bring together technology and business leaders and technology experts to discuss Node.js’ transformative role in the future of computing.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thank you so much, Node Summit, for providing the means for our veterans to learn and grow.  We will see you there!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Nell Shamrell-Harrington is a volunteer and scholarship committee chair of Operation Code. She is the proud daughter of two Air Force officers. She resides in Seattle, WA.&lt;/em&gt;&lt;/p&gt;</content><author><name>Nell Shamrell-Harrington</name></author><category term="News" /><summary type="html">Along with teaching coding skills, Operation Code is also dedicated to setting up networks for our military veterans. One of the best ways to grow a network is to attend a technical conference.</summary></entry><entry><title type="html">TechSoup</title><link href="https://operationcode.org/blog/2016/05/20/techsoup.html" rel="alternate" type="text/html" title="TechSoup" /><published>2016-05-20T00:00:00-04:00</published><updated>2016-05-20T00:00:00-04:00</updated><id>https://operationcode.org/blog/2016/05/20/techsoup</id><content type="html" xml:base="https://operationcode.org/blog/2016/05/20/techsoup.html">&lt;p&gt;Operation Code Joins the TechSoup Community&lt;/p&gt;

&lt;p&gt;Learning to code is hard. This is further exacerbated by antiquated hardware and software. As a coding nonprofit serving the nation’s finest and their families, we’re always looking for new ways to partner and work with passionate businesses and organizations that care and help us meet our mission. Fortunately, there is TechSoup.&lt;/p&gt;

&lt;p&gt;TechSoup is a nonprofit with a clear focus: to make it as easy as possible for other nonprofits and libraries to obtain and use the technologies they need to achieve their missions. TechSoup provides access to over 400 technology products donated by more than 45 companies, including donor partners like Microsoft, Adobe, Cisco, Intuit, and Symantec. Read about their &lt;a href=&quot;http://www.techsoup.org/community/success-stories&quot;&gt;success stories&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We are so very thrilled to join such as an amazing service and community of like-minded nonprofits who are building a more incredible and inclusive place to live and work. Special thanks to Sam over at &lt;a href=&quot;https://slack.com&quot;&gt;Slack&lt;/a&gt; who pointed us towards this wonderful organization, and the wonderful support team at TechSoup for getting us squared away.&lt;/p&gt;

&lt;p&gt;Cheers and keep coding,&lt;/p&gt;

&lt;p&gt;&lt;em&gt;David Molina is Founder and Executive Director at Operation Code, and an ex-Army Captain. He resides in Portland, Oregon.&lt;/em&gt;&lt;/p&gt;</content><author><name>David Molina</name></author><category term="News" /><summary type="html">Operation Code Joins the TechSoup Community</summary></entry><entry><title type="html">Slack</title><link href="https://operationcode.org/blog/2016/05/20/slack.html" rel="alternate" type="text/html" title="Slack" /><published>2016-05-20T00:00:00-04:00</published><updated>2016-05-20T00:00:00-04:00</updated><id>https://operationcode.org/blog/2016/05/20/slack</id><content type="html" xml:base="https://operationcode.org/blog/2016/05/20/slack.html">&lt;p&gt;Operation Code 10k Slack Message Limit is History&lt;/p&gt;

&lt;p&gt;Our Software Mentor Protégé Program leverages real-time messaging application, &lt;a href=&quot;https://slack.com&quot;&gt;Slack&lt;/a&gt;, to welcome transitioning military, guard &amp;amp; reserve soldiers, veterans and their families share code and get help hacking on their websites or web applications, quickly communicate between volunteers and the board, all in a decentralized, asynchronous platform.&lt;/p&gt;

&lt;p&gt;Earlier last year iOS/Android developer &lt;a href=&quot;https://github.com/nanoxd&quot;&gt;Fernando Paredes&lt;/a&gt; setup Slack and seamlessly integrated it into our Ruby on Rails application so that each time a new veteran joined, he/she would get an immediate invite and join us. But as you can imagine we quickly capped the 10k message limit prohibiting anyone to see past a few page scrolls. Last summer I sent over a request to Slack, but due to tax-exemption status couldn’t get it lifted. Fortunately, all that changed earlier this month with the IRS approving our tax-exemption.&lt;/p&gt;

&lt;p&gt;Slack added fully searchable archive w/ unlimited messages, unlimited external integrations, simple usage statistics, custom message retention policies, guest access, and premium support to Operation Code’s Slack channel. As a result new channels are being created to better serve our military veterans community and their pursuit for becoming programmers. The latest channel: eloquent-javascript.&lt;br /&gt;
New military veterans who just joined Operation Code will now enjoy a more seamless experience and so will our &lt;a href=&quot;https://github.com/OperationCode/operationcode/graphs/contributors&quot;&gt;contributors&lt;/a&gt; in adding new Slack external functionalities. Special thanks to the incredible team at Slack for always being helpful and for an incredible and ever useful tool that allows all of us who’ve served or are serving from all corners of the globe to learn to code and help the transition to become programmers less painful.&lt;/p&gt;

&lt;p&gt;Cheers and keep coding,&lt;/p&gt;

&lt;p&gt;&lt;em&gt;David Molina is Founder and Executive Director at Operation Code, and an ex-Army Captain. He resides in Portland, Oregon.&lt;/em&gt;&lt;/p&gt;</content><author><name>David Molina</name></author><category term="News" /><summary type="html">Operation Code 10k Slack Message Limit is History</summary></entry><entry><title type="html">Benefits Creep, Part I</title><link href="https://operationcode.org/blog/2016/05/14/benefits-creep-part-1.html" rel="alternate" type="text/html" title="Benefits Creep, Part I" /><published>2016-05-14T00:00:00-04:00</published><updated>2016-05-14T00:00:00-04:00</updated><id>https://operationcode.org/blog/2016/05/14/benefits-creep-part-1</id><content type="html" xml:base="https://operationcode.org/blog/2016/05/14/benefits-creep-part-1.html">&lt;p&gt;Benefits-Creep Part I: Why Non-Profit Perks Go Up When They Shouldn’t&lt;/p&gt;

&lt;p&gt;Much of the country was shocked this month to hear about the mismanagement of a large veterans’ non-profit organization.  Sadly, this was not shocking news to the veteran community, which had a long growing suspicion that this organization was spending too much money on lavish benefits for its leaders and staff.   Like many organizations, it had lost its way – getting caught up in its own success and giving the appearance that its leaders were more interested in serving themselves and not veterans.  In contrast to mission-creep, where an organization gets farther and farther from its core mission, this is “Benefits-Creep” in which an organization over-expands the perks it offers to leadership and staff.&lt;/p&gt;

&lt;p&gt;For most of us who found or start working for non-profits, we do so with the best intentions at heart.  With success, however, it becomes easier to justify expenses that in the beginning we never would have considered.  There are a few reasons for benefits-creep:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;More money.  With more money, “luxury” expenses become easier to afford.  Also, if looked at as a percentage of the budget, expenses may even go down as the quality of things like hotels, dinners, and flights increase.  Clearly, many non-profit leaders are falling into the trap of setting expenses by a percentage of budget rather than by need.  Under a percentage allocation, if a travel budget of $1,000 can be justified on a $10,000 budget, then when the budget is $100,000, these leaders think is perfectly OK to spend $10,000.  While that may be true for business owners who get to reap the rewards of their increased profits, it is not true for non-profits who must also be looking to serve the public and must guard against percentage-based benefits-creep.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The new normal.  Imagine a non-profit that is going through growing pains.  Maybe its management is having trouble dealing with expanded numbers of staff, or perhaps turnover has caused morale problems.  In order to fix these problems, which are having a real impact on the non-profit’s ability to provide services, leadership determines to have a “retreat” to refocus. Maybe they go to a leadership camp or fly-in the whole board for a team building weekend. While this is more expensive than their normal travel budgets, it may be entirely legitimate and help fix issues. The problem comes the following year:  there is no major issue but everyone remembers how nice last year’s event was.  Who wants to have a day long retreat in town, when last year’s weekend event by the lake was so much fun?  Once again, the travel budget goes up, and the following year it goes up again.  In this case, something that was meant to be an exception to policy became the new normal.  The new normal can cause benefits-creep almost anywhere in the budge from travel, dinners, snacks in the kitchen, to even who gets what type of office chair.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Outside influence and Expert Volunteers.  As a non-profit grows, more people are going to be interested in helping it. These may be business leaders that want to serve on the board or upper-income volunteers that want to help with events.  These volunteers are critical to an organization’s growth:  they help raise expectations, diversify funding streams, expose the organization to new management paradigms, and provide critical staff-power.  Operation Code is experiencing such an influx right now in its JAG Brigade, which has greatly increased its capability by adding lawyers who are volunteering from Hunton &amp;amp; Williams, one of the largest and best law firms in the country. Operation Code’s JAG Brigade is meant to do two things:  1. provide legal services to veterans in software development that have legal issues, such as incorporating their own business  or protecting intellectual property, and 2. assist coding schools with filing to be eligible to receive the G.I. Bill so veterans can use their benefits to learn to code.  Obviously, having top notch attorneys such as Penn Law graduate, Stefano D’Aniello, or Yale Law alum, Jordi Martinez-Cid, is critical to providing veterans the best legal support on these issues, but top law firms operate on radical different budgets than non-profits.  This budget gap may lead to different expectations.   The JAG Brigade is blessed – its volunteers from Hunton &amp;amp; Williams are down to earth attorneys and Hunton &amp;amp; Williams has a great deal of experience in helping small organizations and veterans.  Not every non-profit will be so lucky in getting expert volunteers with realistic expectations.  Leadership must help manage the expectations of successful leaders and experts brought in to help the organization.  Too often wealthy benefactors may suggest either budget busting endeavors or the expansion of small non-essential items that lead to inappropriate benefits-creep.  This is especially important to watch for as often these benefactors will offer to fund the extra benefits, and so it will seem to the non-profit that there is no harm.  However, perception can quickly become reality and explaining to other donors or the IRS how the retreat to a luxury resort was ear-marked by a donor that picked up the extra cost is not a good position to be in.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Regardless of the source of benefits-creep, it can be dangerous to an organization’s bottom-line, its perception in the community, and worst of all to its legal standing.  Non-profit leaders must continually be managing both budgets and expectations to stop benefits-creep.  In Part II of this series, I walk through the strategies Operation Code has put in place to stop benefits-creep and ensure that when budgets go up our beneficiaries are the ones that benefit.&lt;/p&gt;

&lt;p&gt;These are three reasons non-profits succumb to benefits-creep.  Please share your experiences with how you have seen benefits-creep impact non-profits.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Mark Kerr is Chairman of the Operation Code Board of Directors, Development Advisor to U.S. Southern Command, and an Iraq &amp;amp; Afghanistan war Army veteran. He resides in Miami Beach, Florida.&lt;/em&gt;&lt;/p&gt;</content><author><name>Mark Kerr</name></author><category term="News" /><summary type="html">Benefits-Creep Part I: Why Non-Profit Perks Go Up When They Shouldn’t</summary></entry></feed>